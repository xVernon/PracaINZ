
Test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00000d9e  00000e32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d9e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800150  00800150  00000e82  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e82  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000eb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000ef8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000100c  00000000  00000000  00001000  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000837  00000000  00000000  0000200c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000822  00000000  00000000  00002843  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000010c  00000000  00000000  00003068  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000048b  00000000  00000000  00003174  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003bd  00000000  00000000  000035ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000039bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__stack+0xc3>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__fp_inf+0x4>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <main+0xc0>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <sendstr>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	ee e9       	ldi	r30, 0x9E	; 158
 176:	fd e0       	ldi	r31, 0x0D	; 13
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	a0 35       	cpi	r26, 0x50	; 80
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
 184:	21 e0       	ldi	r18, 0x01	; 1
 186:	a0 e5       	ldi	r26, 0x50	; 80
 188:	b1 e0       	ldi	r27, 0x01	; 1
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	a1 35       	cpi	r26, 0x51	; 81
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	0e 94 90 01 	call	0x320	; 0x320 <main>
 198:	0c 94 cd 06 	jmp	0xd9a	; 0xd9a <_exit>

0000019c <__bad_interrupt>:
 19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <usart_init>:
	return 0;
}


void usart_init(void){
	UBRR0H= (unsigned char)(UBRRVAL>>8);   //high byte
 1a0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L=(unsigned char)UBRRVAL;     			//low byte
 1a4:	87 e6       	ldi	r24, 0x67	; 103
 1a6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B |= (1<<TXEN0) | (1<<RXEN0);		//Enable Transmitter and Receiver
 1aa:	e1 ec       	ldi	r30, 0xC1	; 193
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	80 81       	ld	r24, Z
 1b0:	88 61       	ori	r24, 0x18	; 24
 1b2:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00); 	//Set data frame format: asynchronous mode,no parity, 1 stop bit, 8 bit size
 1b4:	e2 ec       	ldi	r30, 0xC2	; 194
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	80 81       	ld	r24, Z
 1ba:	86 60       	ori	r24, 0x06	; 6
 1bc:	80 83       	st	Z, r24
 1be:	08 95       	ret

000001c0 <sendbyte>:
}

void sendbyte(unsigned char MSG){
	while((UCSR0A&(1<<UDRE0)) == 0);     // Wait if a byte is being transmitted
 1c0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1c4:	95 ff       	sbrs	r25, 5
 1c6:	fc cf       	rjmp	.-8      	; 0x1c0 <sendbyte>
	UDR0 = MSG;
 1c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1cc:	08 95       	ret

000001ce <sendstr>:
}

void sendstr(unsigned char *s){
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	cf 93       	push	r28
 1d4:	8c 01       	movw	r16, r24
	unsigned char i = 0;
 1d6:	c0 e0       	ldi	r28, 0x00	; 0
	while(s[i] != '\0'){
 1d8:	03 c0       	rjmp	.+6      	; 0x1e0 <sendstr+0x12>
		sendbyte(s[i]);
 1da:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <sendbyte>
		i++;
 1de:	cf 5f       	subi	r28, 0xFF	; 255
	UDR0 = MSG;
}

void sendstr(unsigned char *s){
	unsigned char i = 0;
	while(s[i] != '\0'){
 1e0:	f8 01       	movw	r30, r16
 1e2:	ec 0f       	add	r30, r28
 1e4:	f1 1d       	adc	r31, r1
 1e6:	80 81       	ld	r24, Z
 1e8:	81 11       	cpse	r24, r1
 1ea:	f7 cf       	rjmp	.-18     	; 0x1da <sendstr+0xc>
		sendbyte(s[i]);
		i++;
	}
}
 1ec:	cf 91       	pop	r28
 1ee:	1f 91       	pop	r17
 1f0:	0f 91       	pop	r16
 1f2:	08 95       	ret

000001f4 <receivebyte>:

unsigned char receivebyte(void){
	while(!(UCSR0A & (1<<RXC0)));
 1f4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1f8:	88 23       	and	r24, r24
 1fa:	e4 f7       	brge	.-8      	; 0x1f4 <receivebyte>
	return UDR0;
 1fc:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 200:	08 95       	ret

00000202 <ADC_Init>:
	}
}
*/
void ADC_Init(void)
{
	DDRC |= 0x0;		/*  Make ADC port as input  */
 202:	87 b1       	in	r24, 0x07	; 7
 204:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0x87;		/*  Enable ADC, fr/128  */
 206:	87 e8       	ldi	r24, 0x87	; 135
 208:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 20c:	08 95       	ret

0000020e <ADC_measure>:
}

void ADC_measure(uint8_t channel)
{
	ADMUX |= (0<<REFS1) | (1<<REFS0);
 20e:	ac e7       	ldi	r26, 0x7C	; 124
 210:	b0 e0       	ldi	r27, 0x00	; 0
 212:	9c 91       	ld	r25, X
 214:	90 64       	ori	r25, 0x40	; 64
 216:	9c 93       	st	X, r25
	ADCSRA |= (1<<ADEN) | (0<<ADIE) | (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2);
 218:	ea e7       	ldi	r30, 0x7A	; 122
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	90 81       	ld	r25, Z
 21e:	97 68       	ori	r25, 0x87	; 135
 220:	90 83       	st	Z, r25
	ADMUX = ((ADMUX&0xE0)+channel);
 222:	9c 91       	ld	r25, X
 224:	90 7e       	andi	r25, 0xE0	; 224
 226:	89 0f       	add	r24, r25
 228:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADSC);
 22a:	80 81       	ld	r24, Z
 22c:	80 64       	ori	r24, 0x40	; 64
 22e:	80 83       	st	Z, r24
	while(ADCSRA & (1<<ADSC));
 230:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 234:	86 fd       	sbrc	r24, 6
 236:	fc cf       	rjmp	.-8      	; 0x230 <ADC_measure+0x22>
};
 238:	08 95       	ret

0000023a <make_measure>:

float make_measure()
{
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
	int adc_value = ADC;
 23e:	c0 91 78 00 	lds	r28, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 242:	d0 91 79 00 	lds	r29, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	float moisture;
	ADC_measure(0);
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	0e 94 07 01 	call	0x20e	; 0x20e <ADC_measure>
	
	if(adc_value <= 0) moisture = 0;
 24c:	1c 16       	cp	r1, r28
 24e:	1d 06       	cpc	r1, r29
 250:	9c f4       	brge	.+38     	; 0x278 <make_measure+0x3e>
	else moisture = (adc_value*100.00)/550.00;
 252:	be 01       	movw	r22, r28
 254:	dd 0f       	add	r29, r29
 256:	88 0b       	sbc	r24, r24
 258:	99 0b       	sbc	r25, r25
 25a:	0e 94 1a 03 	call	0x634	; 0x634 <__floatsisf>
 25e:	20 e0       	ldi	r18, 0x00	; 0
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	48 ec       	ldi	r20, 0xC8	; 200
 264:	52 e4       	ldi	r21, 0x42	; 66
 266:	0e 94 a6 03 	call	0x74c	; 0x74c <__mulsf3>
 26a:	20 e0       	ldi	r18, 0x00	; 0
 26c:	30 e8       	ldi	r19, 0x80	; 128
 26e:	49 e0       	ldi	r20, 0x09	; 9
 270:	54 e4       	ldi	r21, 0x44	; 68
 272:	0e 94 a6 02 	call	0x54c	; 0x54c <__divsf3>
 276:	03 c0       	rjmp	.+6      	; 0x27e <make_measure+0x44>
{
	int adc_value = ADC;
	float moisture;
	ADC_measure(0);
	
	if(adc_value <= 0) moisture = 0;
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	cb 01       	movw	r24, r22
	else moisture = (adc_value*100.00)/550.00;
	
	return moisture;
}
 27e:	df 91       	pop	r29
 280:	cf 91       	pop	r28
 282:	08 95       	ret

00000284 <save_measures>:

void save_measures(float moisture, int numberOfMeasure)
{
	eeprom_write_float((uint8_t*)46 + (4*numberOfMeasure), moisture);
 284:	9a 01       	movw	r18, r20
 286:	22 0f       	add	r18, r18
 288:	33 1f       	adc	r19, r19
 28a:	22 0f       	add	r18, r18
 28c:	33 1f       	adc	r19, r19
 28e:	ab 01       	movw	r20, r22
 290:	bc 01       	movw	r22, r24
 292:	c9 01       	movw	r24, r18
 294:	8e 96       	adiw	r24, 0x2e	; 46
 296:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <eeprom_write_dword>
 29a:	08 95       	ret

0000029c <read_measures>:
}

void read_measures()
{
 29c:	cf 92       	push	r12
 29e:	df 92       	push	r13
 2a0:	ff 92       	push	r15
 2a2:	0f 93       	push	r16
 2a4:	1f 93       	push	r17
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	cd b7       	in	r28, 0x3d	; 61
 2ac:	de b7       	in	r29, 0x3e	; 62
 2ae:	2a 97       	sbiw	r28, 0x0a	; 10
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	f8 94       	cli
 2b4:	de bf       	out	0x3e, r29	; 62
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	cd bf       	out	0x3d, r28	; 61
	uint8_t i;
	char array[10];
	
	for (i = 0; i <= 23; i++)
 2ba:	f1 2c       	mov	r15, r1
 2bc:	20 c0       	rjmp	.+64     	; 0x2fe <read_measures+0x62>
	{
		dtostrf(eeprom_read_float((uint8_t*)46+(4*i)),3,2,array);
 2be:	8f 2d       	mov	r24, r15
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	88 0f       	add	r24, r24
 2c4:	99 1f       	adc	r25, r25
 2c6:	88 0f       	add	r24, r24
 2c8:	99 1f       	adc	r25, r25
 2ca:	8e 96       	adiw	r24, 0x2e	; 46
 2cc:	0e 94 65 06 	call	0xcca	; 0xcca <eeprom_read_dword>
 2d0:	9e 01       	movw	r18, r28
 2d2:	2f 5f       	subi	r18, 0xFF	; 255
 2d4:	3f 4f       	sbci	r19, 0xFF	; 255
 2d6:	69 01       	movw	r12, r18
 2d8:	89 01       	movw	r16, r18
 2da:	22 e0       	ldi	r18, 0x02	; 2
 2dc:	43 e0       	ldi	r20, 0x03	; 3
 2de:	0e 94 13 04 	call	0x826	; 0x826 <dtostrf>
		strcat(array,"%\n");
 2e2:	f6 01       	movw	r30, r12
 2e4:	01 90       	ld	r0, Z+
 2e6:	00 20       	and	r0, r0
 2e8:	e9 f7       	brne	.-6      	; 0x2e4 <read_measures+0x48>
 2ea:	31 97       	sbiw	r30, 0x01	; 1
 2ec:	85 e2       	ldi	r24, 0x25	; 37
 2ee:	9a e0       	ldi	r25, 0x0A	; 10
 2f0:	91 83       	std	Z+1, r25	; 0x01
 2f2:	80 83       	st	Z, r24
 2f4:	12 82       	std	Z+2, r1	; 0x02
		sendstr(array);
 2f6:	c6 01       	movw	r24, r12
 2f8:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
void read_measures()
{
	uint8_t i;
	char array[10];
	
	for (i = 0; i <= 23; i++)
 2fc:	f3 94       	inc	r15
 2fe:	37 e1       	ldi	r19, 0x17	; 23
 300:	3f 15       	cp	r19, r15
 302:	e8 f6       	brcc	.-70     	; 0x2be <read_measures+0x22>
	{
		dtostrf(eeprom_read_float((uint8_t*)46+(4*i)),3,2,array);
		strcat(array,"%\n");
		sendstr(array);
	}
}
 304:	2a 96       	adiw	r28, 0x0a	; 10
 306:	0f b6       	in	r0, 0x3f	; 63
 308:	f8 94       	cli
 30a:	de bf       	out	0x3e, r29	; 62
 30c:	0f be       	out	0x3f, r0	; 63
 30e:	cd bf       	out	0x3d, r28	; 61
 310:	df 91       	pop	r29
 312:	cf 91       	pop	r28
 314:	1f 91       	pop	r17
 316:	0f 91       	pop	r16
 318:	ff 90       	pop	r15
 31a:	df 90       	pop	r13
 31c:	cf 90       	pop	r12
 31e:	08 95       	ret

00000320 <main>:
unsigned char onmsg[] = "ON\n";
unsigned char offmsg[] = "OFF\n";
unsigned char defaultmsg[] = "LED Status:";
unsigned char rxdata;

int main(){
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	cd b7       	in	r28, 0x3d	; 61
 326:	de b7       	in	r29, 0x3e	; 62
 328:	ca 56       	subi	r28, 0x6A	; 106
 32a:	d1 09       	sbc	r29, r1
 32c:	0f b6       	in	r0, 0x3f	; 63
 32e:	f8 94       	cli
 330:	de bf       	out	0x3e, r29	; 62
 332:	0f be       	out	0x3f, r0	; 63
 334:	cd bf       	out	0x3d, r28	; 61

	DDRB |= (1<<PB1);
 336:	84 b1       	in	r24, 0x04	; 4
 338:	82 60       	ori	r24, 0x02	; 2
 33a:	84 b9       	out	0x04, r24	; 4
	DDRB |= (1<<PB2);
 33c:	84 b1       	in	r24, 0x04	; 4
 33e:	84 60       	ori	r24, 0x04	; 4
 340:	84 b9       	out	0x04, r24	; 4
	usart_init();
 342:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <usart_init>
	ADC_Init();
 346:	0e 94 01 01 	call	0x202	; 0x202 <ADC_Init>
	float moisture_values[24];
	int i = 0;
	
	while(1){
				
		rxdata = receivebyte();
 34a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <receivebyte>
 34e:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>

		if(rxdata == 'y'){
 352:	89 37       	cpi	r24, 0x79	; 121
 354:	61 f4       	brne	.+24     	; 0x36e <main+0x4e>
			PORTB |= (1<<PB1);
 356:	85 b1       	in	r24, 0x05	; 5
 358:	82 60       	ori	r24, 0x02	; 2
 35a:	85 b9       	out	0x05, r24	; 5
			sendstr(defaultmsg);
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	91 e0       	ldi	r25, 0x01	; 1
 360:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
			sendstr(onmsg);
 364:	81 e1       	ldi	r24, 0x11	; 17
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
 36c:	ee cf       	rjmp	.-36     	; 0x34a <main+0x2a>
		}
		else if(rxdata =='n'){
 36e:	8e 36       	cpi	r24, 0x6E	; 110
 370:	61 f4       	brne	.+24     	; 0x38a <main+0x6a>
			PORTB &= ~(1<<PB1);
 372:	85 b1       	in	r24, 0x05	; 5
 374:	8d 7f       	andi	r24, 0xFD	; 253
 376:	85 b9       	out	0x05, r24	; 5
			sendstr(defaultmsg);
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
			sendstr(offmsg);
 380:	8c e0       	ldi	r24, 0x0C	; 12
 382:	91 e0       	ldi	r25, 0x01	; 1
 384:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
 388:	e0 cf       	rjmp	.-64     	; 0x34a <main+0x2a>
		}
		else if(rxdata == 's'){
 38a:	83 37       	cpi	r24, 0x73	; 115
 38c:	39 f4       	brne	.+14     	; 0x39c <main+0x7c>
			while (1)
			{
				moisture = make_measure();
 38e:	0e 94 1d 01 	call	0x23a	; 0x23a <make_measure>
				save_measures(moisture,46);
 392:	4e e2       	ldi	r20, 0x2E	; 46
 394:	50 e0       	ldi	r21, 0x00	; 0
 396:	0e 94 42 01 	call	0x284	; 0x284 <save_measures>
 39a:	f9 cf       	rjmp	.-14     	; 0x38e <main+0x6e>
				eeprom_read_float((uint8_t *)46);
			}
		}else if(rxdata == 'a'){
 39c:	81 36       	cpi	r24, 0x61	; 97
 39e:	09 f0       	breq	.+2      	; 0x3a2 <main+0x82>
 3a0:	8d c0       	rjmp	.+282    	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 3a2:	62 c0       	rjmp	.+196    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
			for( i = 0; i <=23; i++)
			{
				adc_value = ADC;
 3a4:	00 91 78 00 	lds	r16, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 3a8:	10 91 79 00 	lds	r17, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
				ADC_measure(0);
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	0e 94 07 01 	call	0x20e	; 0x20e <ADC_measure>
				if(adc_value <= 0)
 3b2:	10 16       	cp	r1, r16
 3b4:	11 06       	cpc	r1, r17
 3b6:	a4 f0       	brlt	.+40     	; 0x3e0 <main+0xc0>
				{
					sendstr("Wilgotnosc gleby: 0%\n");
 3b8:	85 e1       	ldi	r24, 0x15	; 21
 3ba:	91 e0       	ldi	r25, 0x01	; 1
 3bc:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
					moisture_values[i] = 0;
 3c0:	f7 01       	movw	r30, r14
 3c2:	ee 0f       	add	r30, r30
 3c4:	ff 1f       	adc	r31, r31
 3c6:	ee 0f       	add	r30, r30
 3c8:	ff 1f       	adc	r31, r31
 3ca:	21 e0       	ldi	r18, 0x01	; 1
 3cc:	30 e0       	ldi	r19, 0x00	; 0
 3ce:	2c 0f       	add	r18, r28
 3d0:	3d 1f       	adc	r19, r29
 3d2:	e2 0f       	add	r30, r18
 3d4:	f3 1f       	adc	r31, r19
 3d6:	12 86       	std	Z+10, r1	; 0x0a
 3d8:	13 86       	std	Z+11, r1	; 0x0b
 3da:	14 86       	std	Z+12, r1	; 0x0c
 3dc:	15 86       	std	Z+13, r1	; 0x0d
 3de:	37 c0       	rjmp	.+110    	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
				}
				else
				{
					moisture = (adc_value*100.00)/550.00;
 3e0:	b8 01       	movw	r22, r16
 3e2:	11 0f       	add	r17, r17
 3e4:	88 0b       	sbc	r24, r24
 3e6:	99 0b       	sbc	r25, r25
 3e8:	0e 94 1a 03 	call	0x634	; 0x634 <__floatsisf>
 3ec:	20 e0       	ldi	r18, 0x00	; 0
 3ee:	30 e0       	ldi	r19, 0x00	; 0
 3f0:	48 ec       	ldi	r20, 0xC8	; 200
 3f2:	52 e4       	ldi	r21, 0x42	; 66
 3f4:	0e 94 a6 03 	call	0x74c	; 0x74c <__mulsf3>
 3f8:	20 e0       	ldi	r18, 0x00	; 0
 3fa:	30 e8       	ldi	r19, 0x80	; 128
 3fc:	49 e0       	ldi	r20, 0x09	; 9
 3fe:	54 e4       	ldi	r21, 0x44	; 68
 400:	0e 94 a6 02 	call	0x54c	; 0x54c <__divsf3>
					moisture_values[i] = moisture;
 404:	9e 01       	movw	r18, r28
 406:	2f 5f       	subi	r18, 0xFF	; 255
 408:	3f 4f       	sbci	r19, 0xFF	; 255
 40a:	69 01       	movw	r12, r18
 40c:	f7 01       	movw	r30, r14
 40e:	ee 0f       	add	r30, r30
 410:	ff 1f       	adc	r31, r31
 412:	ee 0f       	add	r30, r30
 414:	ff 1f       	adc	r31, r31
 416:	e2 0f       	add	r30, r18
 418:	f3 1f       	adc	r31, r19
 41a:	62 87       	std	Z+10, r22	; 0x0a
 41c:	73 87       	std	Z+11, r23	; 0x0b
 41e:	84 87       	std	Z+12, r24	; 0x0c
 420:	95 87       	std	Z+13, r25	; 0x0d
					dtostrf(moisture_values[i],3,2,array);
 422:	89 01       	movw	r16, r18
 424:	22 e0       	ldi	r18, 0x02	; 2
 426:	43 e0       	ldi	r20, 0x03	; 3
 428:	0e 94 13 04 	call	0x826	; 0x826 <dtostrf>
					strcat(array,"%\n");	/* Concatenate unit of % */
 42c:	f6 01       	movw	r30, r12
 42e:	01 90       	ld	r0, Z+
 430:	00 20       	and	r0, r0
 432:	e9 f7       	brne	.-6      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 434:	31 97       	sbiw	r30, 0x01	; 1
 436:	85 e2       	ldi	r24, 0x25	; 37
 438:	9a e0       	ldi	r25, 0x0A	; 10
 43a:	91 83       	std	Z+1, r25	; 0x01
 43c:	80 83       	st	Z, r24
 43e:	12 82       	std	Z+2, r1	; 0x02
					sendstr("Wilgotnosc gleby: ");
 440:	8b e2       	ldi	r24, 0x2B	; 43
 442:	91 e0       	ldi	r25, 0x01	; 1
 444:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
					sendstr(array);
 448:	c6 01       	movw	r24, r12
 44a:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 44e:	3f ef       	ldi	r19, 0xFF	; 255
 450:	89 e6       	ldi	r24, 0x69	; 105
 452:	98 e1       	ldi	r25, 0x18	; 24
 454:	31 50       	subi	r19, 0x01	; 1
 456:	80 40       	sbci	r24, 0x00	; 0
 458:	90 40       	sbci	r25, 0x00	; 0
 45a:	e1 f7       	brne	.-8      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 45e:	00 00       	nop
				moisture = make_measure();
				save_measures(moisture,46);
				eeprom_read_float((uint8_t *)46);
			}
		}else if(rxdata == 'a'){
			for( i = 0; i <=23; i++)
 460:	2f ef       	ldi	r18, 0xFF	; 255
 462:	e2 1a       	sub	r14, r18
 464:	f2 0a       	sbc	r15, r18
 466:	02 c0       	rjmp	.+4      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 468:	e1 2c       	mov	r14, r1
 46a:	f1 2c       	mov	r15, r1
 46c:	38 e1       	ldi	r19, 0x18	; 24
 46e:	e3 16       	cp	r14, r19
 470:	f1 04       	cpc	r15, r1
 472:	0c f4       	brge	.+2      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 474:	97 cf       	rjmp	.-210    	; 0x3a4 <main+0x84>
					sendstr(array);
				}
				_delay_ms(500);
			}
			
			eeprom_write_float((uint8_t*)46,moisture_values[6]);
 476:	4b a1       	ldd	r20, Y+35	; 0x23
 478:	5c a1       	ldd	r21, Y+36	; 0x24
 47a:	6d a1       	ldd	r22, Y+37	; 0x25
 47c:	7e a1       	ldd	r23, Y+38	; 0x26
 47e:	8e e2       	ldi	r24, 0x2E	; 46
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <eeprom_write_dword>
			dtostrf(eeprom_read_float((uint8_t*)46),3,2,array);
 486:	8e e2       	ldi	r24, 0x2E	; 46
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 65 06 	call	0xcca	; 0xcca <eeprom_read_dword>
 48e:	9e 01       	movw	r18, r28
 490:	2f 5f       	subi	r18, 0xFF	; 255
 492:	3f 4f       	sbci	r19, 0xFF	; 255
 494:	79 01       	movw	r14, r18
 496:	89 01       	movw	r16, r18
 498:	22 e0       	ldi	r18, 0x02	; 2
 49a:	43 e0       	ldi	r20, 0x03	; 3
 49c:	0e 94 13 04 	call	0x826	; 0x826 <dtostrf>
			strcat(array,"%\n");
 4a0:	f7 01       	movw	r30, r14
 4a2:	01 90       	ld	r0, Z+
 4a4:	00 20       	and	r0, r0
 4a6:	e9 f7       	brne	.-6      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 4a8:	31 97       	sbiw	r30, 0x01	; 1
 4aa:	85 e2       	ldi	r24, 0x25	; 37
 4ac:	9a e0       	ldi	r25, 0x0A	; 10
 4ae:	91 83       	std	Z+1, r25	; 0x01
 4b0:	80 83       	st	Z, r24
 4b2:	12 82       	std	Z+2, r1	; 0x02
			sendstr(array);
 4b4:	c7 01       	movw	r24, r14
 4b6:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
 4ba:	47 cf       	rjmp	.-370    	; 0x34a <main+0x2a>
				strcat(array,"%, ");
				sendstr(array);
			}
			*/
		}
		else if(rxdata == 'm')
 4bc:	8d 36       	cpi	r24, 0x6D	; 109
 4be:	09 f0       	breq	.+2      	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
 4c0:	3f c0       	rjmp	.+126    	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 4c2:	31 c0       	rjmp	.+98     	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
		{
			for( i = 0; i <=23; i++)
			{
				moisture = make_measure();
 4c4:	0e 94 1d 01 	call	0x23a	; 0x23a <make_measure>
 4c8:	4b 01       	movw	r8, r22
 4ca:	5c 01       	movw	r10, r24
				dtostrf(moisture,3,2,array);
 4cc:	ce 01       	movw	r24, r28
 4ce:	01 96       	adiw	r24, 0x01	; 1
 4d0:	6c 01       	movw	r12, r24
 4d2:	8c 01       	movw	r16, r24
 4d4:	22 e0       	ldi	r18, 0x02	; 2
 4d6:	43 e0       	ldi	r20, 0x03	; 3
 4d8:	c5 01       	movw	r24, r10
 4da:	b4 01       	movw	r22, r8
 4dc:	0e 94 13 04 	call	0x826	; 0x826 <dtostrf>
				strcat(array,"%\n");	/* Concatenate unit of % */
 4e0:	f6 01       	movw	r30, r12
 4e2:	01 90       	ld	r0, Z+
 4e4:	00 20       	and	r0, r0
 4e6:	e9 f7       	brne	.-6      	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4e8:	31 97       	sbiw	r30, 0x01	; 1
 4ea:	85 e2       	ldi	r24, 0x25	; 37
 4ec:	9a e0       	ldi	r25, 0x0A	; 10
 4ee:	91 83       	std	Z+1, r25	; 0x01
 4f0:	80 83       	st	Z, r24
 4f2:	12 82       	std	Z+2, r1	; 0x02
				sendstr("Wilgotnosc gleby: ");
 4f4:	8b e2       	ldi	r24, 0x2B	; 43
 4f6:	91 e0       	ldi	r25, 0x01	; 1
 4f8:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
				sendstr(array);
 4fc:	c6 01       	movw	r24, r12
 4fe:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
				save_measures(moisture, i);
 502:	a7 01       	movw	r20, r14
 504:	c5 01       	movw	r24, r10
 506:	b4 01       	movw	r22, r8
 508:	0e 94 42 01 	call	0x284	; 0x284 <save_measures>
 50c:	9f ef       	ldi	r25, 0xFF	; 255
 50e:	29 e6       	ldi	r18, 0x69	; 105
 510:	38 e1       	ldi	r19, 0x18	; 24
 512:	91 50       	subi	r25, 0x01	; 1
 514:	20 40       	sbci	r18, 0x00	; 0
 516:	30 40       	sbci	r19, 0x00	; 0
 518:	e1 f7       	brne	.-8      	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
 51a:	00 c0       	rjmp	.+0      	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 51c:	00 00       	nop
			}
			*/
		}
		else if(rxdata == 'm')
		{
			for( i = 0; i <=23; i++)
 51e:	8f ef       	ldi	r24, 0xFF	; 255
 520:	e8 1a       	sub	r14, r24
 522:	f8 0a       	sbc	r15, r24
 524:	02 c0       	rjmp	.+4      	; 0x52a <__EEPROM_REGION_LENGTH__+0x12a>
 526:	e1 2c       	mov	r14, r1
 528:	f1 2c       	mov	r15, r1
 52a:	98 e1       	ldi	r25, 0x18	; 24
 52c:	e9 16       	cp	r14, r25
 52e:	f1 04       	cpc	r15, r1
 530:	4c f2       	brlt	.-110    	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
				sendstr("Wilgotnosc gleby: ");
				sendstr(array);
				save_measures(moisture, i);
				_delay_ms(500);
			}
			sendstr("WYPISANE POMIARY");
 532:	8e e3       	ldi	r24, 0x3E	; 62
 534:	91 e0       	ldi	r25, 0x01	; 1
 536:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sendstr>
			read_measures();
 53a:	0e 94 4e 01 	call	0x29c	; 0x29c <read_measures>
 53e:	05 cf       	rjmp	.-502    	; 0x34a <main+0x2a>
		}
		else if(rxdata == 'q')
 540:	81 37       	cpi	r24, 0x71	; 113
 542:	09 f0       	breq	.+2      	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
 544:	02 cf       	rjmp	.-508    	; 0x34a <main+0x2a>
		{
			read_measures();
 546:	0e 94 4e 01 	call	0x29c	; 0x29c <read_measures>
 54a:	ff ce       	rjmp	.-514    	; 0x34a <main+0x2a>

0000054c <__divsf3>:
 54c:	0e 94 ba 02 	call	0x574	; 0x574 <__divsf3x>
 550:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_round>
 554:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fp_pscB>
 558:	58 f0       	brcs	.+22     	; 0x570 <__divsf3+0x24>
 55a:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__fp_pscA>
 55e:	40 f0       	brcs	.+16     	; 0x570 <__divsf3+0x24>
 560:	29 f4       	brne	.+10     	; 0x56c <__divsf3+0x20>
 562:	5f 3f       	cpi	r21, 0xFF	; 255
 564:	29 f0       	breq	.+10     	; 0x570 <__divsf3+0x24>
 566:	0c 94 55 03 	jmp	0x6aa	; 0x6aa <__fp_inf>
 56a:	51 11       	cpse	r21, r1
 56c:	0c 94 a0 03 	jmp	0x740	; 0x740 <__fp_szero>
 570:	0c 94 5b 03 	jmp	0x6b6	; 0x6b6 <__fp_nan>

00000574 <__divsf3x>:
 574:	0e 94 7d 03 	call	0x6fa	; 0x6fa <__fp_split3>
 578:	68 f3       	brcs	.-38     	; 0x554 <__divsf3+0x8>

0000057a <__divsf3_pse>:
 57a:	99 23       	and	r25, r25
 57c:	b1 f3       	breq	.-20     	; 0x56a <__divsf3+0x1e>
 57e:	55 23       	and	r21, r21
 580:	91 f3       	breq	.-28     	; 0x566 <__divsf3+0x1a>
 582:	95 1b       	sub	r25, r21
 584:	55 0b       	sbc	r21, r21
 586:	bb 27       	eor	r27, r27
 588:	aa 27       	eor	r26, r26
 58a:	62 17       	cp	r22, r18
 58c:	73 07       	cpc	r23, r19
 58e:	84 07       	cpc	r24, r20
 590:	38 f0       	brcs	.+14     	; 0x5a0 <__divsf3_pse+0x26>
 592:	9f 5f       	subi	r25, 0xFF	; 255
 594:	5f 4f       	sbci	r21, 0xFF	; 255
 596:	22 0f       	add	r18, r18
 598:	33 1f       	adc	r19, r19
 59a:	44 1f       	adc	r20, r20
 59c:	aa 1f       	adc	r26, r26
 59e:	a9 f3       	breq	.-22     	; 0x58a <__divsf3_pse+0x10>
 5a0:	35 d0       	rcall	.+106    	; 0x60c <__divsf3_pse+0x92>
 5a2:	0e 2e       	mov	r0, r30
 5a4:	3a f0       	brmi	.+14     	; 0x5b4 <__divsf3_pse+0x3a>
 5a6:	e0 e8       	ldi	r30, 0x80	; 128
 5a8:	32 d0       	rcall	.+100    	; 0x60e <__divsf3_pse+0x94>
 5aa:	91 50       	subi	r25, 0x01	; 1
 5ac:	50 40       	sbci	r21, 0x00	; 0
 5ae:	e6 95       	lsr	r30
 5b0:	00 1c       	adc	r0, r0
 5b2:	ca f7       	brpl	.-14     	; 0x5a6 <__divsf3_pse+0x2c>
 5b4:	2b d0       	rcall	.+86     	; 0x60c <__divsf3_pse+0x92>
 5b6:	fe 2f       	mov	r31, r30
 5b8:	29 d0       	rcall	.+82     	; 0x60c <__divsf3_pse+0x92>
 5ba:	66 0f       	add	r22, r22
 5bc:	77 1f       	adc	r23, r23
 5be:	88 1f       	adc	r24, r24
 5c0:	bb 1f       	adc	r27, r27
 5c2:	26 17       	cp	r18, r22
 5c4:	37 07       	cpc	r19, r23
 5c6:	48 07       	cpc	r20, r24
 5c8:	ab 07       	cpc	r26, r27
 5ca:	b0 e8       	ldi	r27, 0x80	; 128
 5cc:	09 f0       	breq	.+2      	; 0x5d0 <__divsf3_pse+0x56>
 5ce:	bb 0b       	sbc	r27, r27
 5d0:	80 2d       	mov	r24, r0
 5d2:	bf 01       	movw	r22, r30
 5d4:	ff 27       	eor	r31, r31
 5d6:	93 58       	subi	r25, 0x83	; 131
 5d8:	5f 4f       	sbci	r21, 0xFF	; 255
 5da:	3a f0       	brmi	.+14     	; 0x5ea <__divsf3_pse+0x70>
 5dc:	9e 3f       	cpi	r25, 0xFE	; 254
 5de:	51 05       	cpc	r21, r1
 5e0:	78 f0       	brcs	.+30     	; 0x600 <__divsf3_pse+0x86>
 5e2:	0c 94 55 03 	jmp	0x6aa	; 0x6aa <__fp_inf>
 5e6:	0c 94 a0 03 	jmp	0x740	; 0x740 <__fp_szero>
 5ea:	5f 3f       	cpi	r21, 0xFF	; 255
 5ec:	e4 f3       	brlt	.-8      	; 0x5e6 <__divsf3_pse+0x6c>
 5ee:	98 3e       	cpi	r25, 0xE8	; 232
 5f0:	d4 f3       	brlt	.-12     	; 0x5e6 <__divsf3_pse+0x6c>
 5f2:	86 95       	lsr	r24
 5f4:	77 95       	ror	r23
 5f6:	67 95       	ror	r22
 5f8:	b7 95       	ror	r27
 5fa:	f7 95       	ror	r31
 5fc:	9f 5f       	subi	r25, 0xFF	; 255
 5fe:	c9 f7       	brne	.-14     	; 0x5f2 <__divsf3_pse+0x78>
 600:	88 0f       	add	r24, r24
 602:	91 1d       	adc	r25, r1
 604:	96 95       	lsr	r25
 606:	87 95       	ror	r24
 608:	97 f9       	bld	r25, 7
 60a:	08 95       	ret
 60c:	e1 e0       	ldi	r30, 0x01	; 1
 60e:	66 0f       	add	r22, r22
 610:	77 1f       	adc	r23, r23
 612:	88 1f       	adc	r24, r24
 614:	bb 1f       	adc	r27, r27
 616:	62 17       	cp	r22, r18
 618:	73 07       	cpc	r23, r19
 61a:	84 07       	cpc	r24, r20
 61c:	ba 07       	cpc	r27, r26
 61e:	20 f0       	brcs	.+8      	; 0x628 <__divsf3_pse+0xae>
 620:	62 1b       	sub	r22, r18
 622:	73 0b       	sbc	r23, r19
 624:	84 0b       	sbc	r24, r20
 626:	ba 0b       	sbc	r27, r26
 628:	ee 1f       	adc	r30, r30
 62a:	88 f7       	brcc	.-30     	; 0x60e <__divsf3_pse+0x94>
 62c:	e0 95       	com	r30
 62e:	08 95       	ret

00000630 <__floatunsisf>:
 630:	e8 94       	clt
 632:	09 c0       	rjmp	.+18     	; 0x646 <__floatsisf+0x12>

00000634 <__floatsisf>:
 634:	97 fb       	bst	r25, 7
 636:	3e f4       	brtc	.+14     	; 0x646 <__floatsisf+0x12>
 638:	90 95       	com	r25
 63a:	80 95       	com	r24
 63c:	70 95       	com	r23
 63e:	61 95       	neg	r22
 640:	7f 4f       	sbci	r23, 0xFF	; 255
 642:	8f 4f       	sbci	r24, 0xFF	; 255
 644:	9f 4f       	sbci	r25, 0xFF	; 255
 646:	99 23       	and	r25, r25
 648:	a9 f0       	breq	.+42     	; 0x674 <__floatsisf+0x40>
 64a:	f9 2f       	mov	r31, r25
 64c:	96 e9       	ldi	r25, 0x96	; 150
 64e:	bb 27       	eor	r27, r27
 650:	93 95       	inc	r25
 652:	f6 95       	lsr	r31
 654:	87 95       	ror	r24
 656:	77 95       	ror	r23
 658:	67 95       	ror	r22
 65a:	b7 95       	ror	r27
 65c:	f1 11       	cpse	r31, r1
 65e:	f8 cf       	rjmp	.-16     	; 0x650 <__floatsisf+0x1c>
 660:	fa f4       	brpl	.+62     	; 0x6a0 <__floatsisf+0x6c>
 662:	bb 0f       	add	r27, r27
 664:	11 f4       	brne	.+4      	; 0x66a <__floatsisf+0x36>
 666:	60 ff       	sbrs	r22, 0
 668:	1b c0       	rjmp	.+54     	; 0x6a0 <__floatsisf+0x6c>
 66a:	6f 5f       	subi	r22, 0xFF	; 255
 66c:	7f 4f       	sbci	r23, 0xFF	; 255
 66e:	8f 4f       	sbci	r24, 0xFF	; 255
 670:	9f 4f       	sbci	r25, 0xFF	; 255
 672:	16 c0       	rjmp	.+44     	; 0x6a0 <__floatsisf+0x6c>
 674:	88 23       	and	r24, r24
 676:	11 f0       	breq	.+4      	; 0x67c <__floatsisf+0x48>
 678:	96 e9       	ldi	r25, 0x96	; 150
 67a:	11 c0       	rjmp	.+34     	; 0x69e <__floatsisf+0x6a>
 67c:	77 23       	and	r23, r23
 67e:	21 f0       	breq	.+8      	; 0x688 <__floatsisf+0x54>
 680:	9e e8       	ldi	r25, 0x8E	; 142
 682:	87 2f       	mov	r24, r23
 684:	76 2f       	mov	r23, r22
 686:	05 c0       	rjmp	.+10     	; 0x692 <__floatsisf+0x5e>
 688:	66 23       	and	r22, r22
 68a:	71 f0       	breq	.+28     	; 0x6a8 <__floatsisf+0x74>
 68c:	96 e8       	ldi	r25, 0x86	; 134
 68e:	86 2f       	mov	r24, r22
 690:	70 e0       	ldi	r23, 0x00	; 0
 692:	60 e0       	ldi	r22, 0x00	; 0
 694:	2a f0       	brmi	.+10     	; 0x6a0 <__floatsisf+0x6c>
 696:	9a 95       	dec	r25
 698:	66 0f       	add	r22, r22
 69a:	77 1f       	adc	r23, r23
 69c:	88 1f       	adc	r24, r24
 69e:	da f7       	brpl	.-10     	; 0x696 <__floatsisf+0x62>
 6a0:	88 0f       	add	r24, r24
 6a2:	96 95       	lsr	r25
 6a4:	87 95       	ror	r24
 6a6:	97 f9       	bld	r25, 7
 6a8:	08 95       	ret

000006aa <__fp_inf>:
 6aa:	97 f9       	bld	r25, 7
 6ac:	9f 67       	ori	r25, 0x7F	; 127
 6ae:	80 e8       	ldi	r24, 0x80	; 128
 6b0:	70 e0       	ldi	r23, 0x00	; 0
 6b2:	60 e0       	ldi	r22, 0x00	; 0
 6b4:	08 95       	ret

000006b6 <__fp_nan>:
 6b6:	9f ef       	ldi	r25, 0xFF	; 255
 6b8:	80 ec       	ldi	r24, 0xC0	; 192
 6ba:	08 95       	ret

000006bc <__fp_pscA>:
 6bc:	00 24       	eor	r0, r0
 6be:	0a 94       	dec	r0
 6c0:	16 16       	cp	r1, r22
 6c2:	17 06       	cpc	r1, r23
 6c4:	18 06       	cpc	r1, r24
 6c6:	09 06       	cpc	r0, r25
 6c8:	08 95       	ret

000006ca <__fp_pscB>:
 6ca:	00 24       	eor	r0, r0
 6cc:	0a 94       	dec	r0
 6ce:	12 16       	cp	r1, r18
 6d0:	13 06       	cpc	r1, r19
 6d2:	14 06       	cpc	r1, r20
 6d4:	05 06       	cpc	r0, r21
 6d6:	08 95       	ret

000006d8 <__fp_round>:
 6d8:	09 2e       	mov	r0, r25
 6da:	03 94       	inc	r0
 6dc:	00 0c       	add	r0, r0
 6de:	11 f4       	brne	.+4      	; 0x6e4 <__fp_round+0xc>
 6e0:	88 23       	and	r24, r24
 6e2:	52 f0       	brmi	.+20     	; 0x6f8 <__fp_round+0x20>
 6e4:	bb 0f       	add	r27, r27
 6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__fp_round+0x20>
 6e8:	bf 2b       	or	r27, r31
 6ea:	11 f4       	brne	.+4      	; 0x6f0 <__fp_round+0x18>
 6ec:	60 ff       	sbrs	r22, 0
 6ee:	04 c0       	rjmp	.+8      	; 0x6f8 <__fp_round+0x20>
 6f0:	6f 5f       	subi	r22, 0xFF	; 255
 6f2:	7f 4f       	sbci	r23, 0xFF	; 255
 6f4:	8f 4f       	sbci	r24, 0xFF	; 255
 6f6:	9f 4f       	sbci	r25, 0xFF	; 255
 6f8:	08 95       	ret

000006fa <__fp_split3>:
 6fa:	57 fd       	sbrc	r21, 7
 6fc:	90 58       	subi	r25, 0x80	; 128
 6fe:	44 0f       	add	r20, r20
 700:	55 1f       	adc	r21, r21
 702:	59 f0       	breq	.+22     	; 0x71a <__fp_splitA+0x10>
 704:	5f 3f       	cpi	r21, 0xFF	; 255
 706:	71 f0       	breq	.+28     	; 0x724 <__fp_splitA+0x1a>
 708:	47 95       	ror	r20

0000070a <__fp_splitA>:
 70a:	88 0f       	add	r24, r24
 70c:	97 fb       	bst	r25, 7
 70e:	99 1f       	adc	r25, r25
 710:	61 f0       	breq	.+24     	; 0x72a <__fp_splitA+0x20>
 712:	9f 3f       	cpi	r25, 0xFF	; 255
 714:	79 f0       	breq	.+30     	; 0x734 <__fp_splitA+0x2a>
 716:	87 95       	ror	r24
 718:	08 95       	ret
 71a:	12 16       	cp	r1, r18
 71c:	13 06       	cpc	r1, r19
 71e:	14 06       	cpc	r1, r20
 720:	55 1f       	adc	r21, r21
 722:	f2 cf       	rjmp	.-28     	; 0x708 <__fp_split3+0xe>
 724:	46 95       	lsr	r20
 726:	f1 df       	rcall	.-30     	; 0x70a <__fp_splitA>
 728:	08 c0       	rjmp	.+16     	; 0x73a <__fp_splitA+0x30>
 72a:	16 16       	cp	r1, r22
 72c:	17 06       	cpc	r1, r23
 72e:	18 06       	cpc	r1, r24
 730:	99 1f       	adc	r25, r25
 732:	f1 cf       	rjmp	.-30     	; 0x716 <__fp_splitA+0xc>
 734:	86 95       	lsr	r24
 736:	71 05       	cpc	r23, r1
 738:	61 05       	cpc	r22, r1
 73a:	08 94       	sec
 73c:	08 95       	ret

0000073e <__fp_zero>:
 73e:	e8 94       	clt

00000740 <__fp_szero>:
 740:	bb 27       	eor	r27, r27
 742:	66 27       	eor	r22, r22
 744:	77 27       	eor	r23, r23
 746:	cb 01       	movw	r24, r22
 748:	97 f9       	bld	r25, 7
 74a:	08 95       	ret

0000074c <__mulsf3>:
 74c:	0e 94 b9 03 	call	0x772	; 0x772 <__mulsf3x>
 750:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_round>
 754:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__fp_pscA>
 758:	38 f0       	brcs	.+14     	; 0x768 <__mulsf3+0x1c>
 75a:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fp_pscB>
 75e:	20 f0       	brcs	.+8      	; 0x768 <__mulsf3+0x1c>
 760:	95 23       	and	r25, r21
 762:	11 f0       	breq	.+4      	; 0x768 <__mulsf3+0x1c>
 764:	0c 94 55 03 	jmp	0x6aa	; 0x6aa <__fp_inf>
 768:	0c 94 5b 03 	jmp	0x6b6	; 0x6b6 <__fp_nan>
 76c:	11 24       	eor	r1, r1
 76e:	0c 94 a0 03 	jmp	0x740	; 0x740 <__fp_szero>

00000772 <__mulsf3x>:
 772:	0e 94 7d 03 	call	0x6fa	; 0x6fa <__fp_split3>
 776:	70 f3       	brcs	.-36     	; 0x754 <__mulsf3+0x8>

00000778 <__mulsf3_pse>:
 778:	95 9f       	mul	r25, r21
 77a:	c1 f3       	breq	.-16     	; 0x76c <__mulsf3+0x20>
 77c:	95 0f       	add	r25, r21
 77e:	50 e0       	ldi	r21, 0x00	; 0
 780:	55 1f       	adc	r21, r21
 782:	62 9f       	mul	r22, r18
 784:	f0 01       	movw	r30, r0
 786:	72 9f       	mul	r23, r18
 788:	bb 27       	eor	r27, r27
 78a:	f0 0d       	add	r31, r0
 78c:	b1 1d       	adc	r27, r1
 78e:	63 9f       	mul	r22, r19
 790:	aa 27       	eor	r26, r26
 792:	f0 0d       	add	r31, r0
 794:	b1 1d       	adc	r27, r1
 796:	aa 1f       	adc	r26, r26
 798:	64 9f       	mul	r22, r20
 79a:	66 27       	eor	r22, r22
 79c:	b0 0d       	add	r27, r0
 79e:	a1 1d       	adc	r26, r1
 7a0:	66 1f       	adc	r22, r22
 7a2:	82 9f       	mul	r24, r18
 7a4:	22 27       	eor	r18, r18
 7a6:	b0 0d       	add	r27, r0
 7a8:	a1 1d       	adc	r26, r1
 7aa:	62 1f       	adc	r22, r18
 7ac:	73 9f       	mul	r23, r19
 7ae:	b0 0d       	add	r27, r0
 7b0:	a1 1d       	adc	r26, r1
 7b2:	62 1f       	adc	r22, r18
 7b4:	83 9f       	mul	r24, r19
 7b6:	a0 0d       	add	r26, r0
 7b8:	61 1d       	adc	r22, r1
 7ba:	22 1f       	adc	r18, r18
 7bc:	74 9f       	mul	r23, r20
 7be:	33 27       	eor	r19, r19
 7c0:	a0 0d       	add	r26, r0
 7c2:	61 1d       	adc	r22, r1
 7c4:	23 1f       	adc	r18, r19
 7c6:	84 9f       	mul	r24, r20
 7c8:	60 0d       	add	r22, r0
 7ca:	21 1d       	adc	r18, r1
 7cc:	82 2f       	mov	r24, r18
 7ce:	76 2f       	mov	r23, r22
 7d0:	6a 2f       	mov	r22, r26
 7d2:	11 24       	eor	r1, r1
 7d4:	9f 57       	subi	r25, 0x7F	; 127
 7d6:	50 40       	sbci	r21, 0x00	; 0
 7d8:	9a f0       	brmi	.+38     	; 0x800 <__DATA_REGION_LENGTH__>
 7da:	f1 f0       	breq	.+60     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 7dc:	88 23       	and	r24, r24
 7de:	4a f0       	brmi	.+18     	; 0x7f2 <__mulsf3_pse+0x7a>
 7e0:	ee 0f       	add	r30, r30
 7e2:	ff 1f       	adc	r31, r31
 7e4:	bb 1f       	adc	r27, r27
 7e6:	66 1f       	adc	r22, r22
 7e8:	77 1f       	adc	r23, r23
 7ea:	88 1f       	adc	r24, r24
 7ec:	91 50       	subi	r25, 0x01	; 1
 7ee:	50 40       	sbci	r21, 0x00	; 0
 7f0:	a9 f7       	brne	.-22     	; 0x7dc <__mulsf3_pse+0x64>
 7f2:	9e 3f       	cpi	r25, 0xFE	; 254
 7f4:	51 05       	cpc	r21, r1
 7f6:	80 f0       	brcs	.+32     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 7f8:	0c 94 55 03 	jmp	0x6aa	; 0x6aa <__fp_inf>
 7fc:	0c 94 a0 03 	jmp	0x740	; 0x740 <__fp_szero>
 800:	5f 3f       	cpi	r21, 0xFF	; 255
 802:	e4 f3       	brlt	.-8      	; 0x7fc <__mulsf3_pse+0x84>
 804:	98 3e       	cpi	r25, 0xE8	; 232
 806:	d4 f3       	brlt	.-12     	; 0x7fc <__mulsf3_pse+0x84>
 808:	86 95       	lsr	r24
 80a:	77 95       	ror	r23
 80c:	67 95       	ror	r22
 80e:	b7 95       	ror	r27
 810:	f7 95       	ror	r31
 812:	e7 95       	ror	r30
 814:	9f 5f       	subi	r25, 0xFF	; 255
 816:	c1 f7       	brne	.-16     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 818:	fe 2b       	or	r31, r30
 81a:	88 0f       	add	r24, r24
 81c:	91 1d       	adc	r25, r1
 81e:	96 95       	lsr	r25
 820:	87 95       	ror	r24
 822:	97 f9       	bld	r25, 7
 824:	08 95       	ret

00000826 <dtostrf>:
 826:	ef 92       	push	r14
 828:	0f 93       	push	r16
 82a:	1f 93       	push	r17
 82c:	cf 93       	push	r28
 82e:	df 93       	push	r29
 830:	e8 01       	movw	r28, r16
 832:	47 fd       	sbrc	r20, 7
 834:	02 c0       	rjmp	.+4      	; 0x83a <dtostrf+0x14>
 836:	34 e0       	ldi	r19, 0x04	; 4
 838:	01 c0       	rjmp	.+2      	; 0x83c <dtostrf+0x16>
 83a:	34 e1       	ldi	r19, 0x14	; 20
 83c:	04 2e       	mov	r0, r20
 83e:	00 0c       	add	r0, r0
 840:	55 0b       	sbc	r21, r21
 842:	57 ff       	sbrs	r21, 7
 844:	03 c0       	rjmp	.+6      	; 0x84c <dtostrf+0x26>
 846:	51 95       	neg	r21
 848:	41 95       	neg	r20
 84a:	51 09       	sbc	r21, r1
 84c:	e3 2e       	mov	r14, r19
 84e:	02 2f       	mov	r16, r18
 850:	24 2f       	mov	r18, r20
 852:	ae 01       	movw	r20, r28
 854:	0e 94 33 04 	call	0x866	; 0x866 <dtoa_prf>
 858:	ce 01       	movw	r24, r28
 85a:	df 91       	pop	r29
 85c:	cf 91       	pop	r28
 85e:	1f 91       	pop	r17
 860:	0f 91       	pop	r16
 862:	ef 90       	pop	r14
 864:	08 95       	ret

00000866 <dtoa_prf>:
 866:	a9 e0       	ldi	r26, 0x09	; 9
 868:	b0 e0       	ldi	r27, 0x00	; 0
 86a:	e9 e3       	ldi	r30, 0x39	; 57
 86c:	f4 e0       	ldi	r31, 0x04	; 4
 86e:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__prologue_saves__+0xc>
 872:	6a 01       	movw	r12, r20
 874:	12 2f       	mov	r17, r18
 876:	b0 2e       	mov	r11, r16
 878:	2b e3       	ldi	r18, 0x3B	; 59
 87a:	20 17       	cp	r18, r16
 87c:	20 f0       	brcs	.+8      	; 0x886 <dtoa_prf+0x20>
 87e:	ff 24       	eor	r15, r15
 880:	f3 94       	inc	r15
 882:	f0 0e       	add	r15, r16
 884:	02 c0       	rjmp	.+4      	; 0x88a <dtoa_prf+0x24>
 886:	2c e3       	ldi	r18, 0x3C	; 60
 888:	f2 2e       	mov	r15, r18
 88a:	0f 2d       	mov	r16, r15
 88c:	27 e0       	ldi	r18, 0x07	; 7
 88e:	ae 01       	movw	r20, r28
 890:	4f 5f       	subi	r20, 0xFF	; 255
 892:	5f 4f       	sbci	r21, 0xFF	; 255
 894:	0e 94 8d 05 	call	0xb1a	; 0xb1a <__ftoa_engine>
 898:	bc 01       	movw	r22, r24
 89a:	49 81       	ldd	r20, Y+1	; 0x01
 89c:	84 2f       	mov	r24, r20
 89e:	89 70       	andi	r24, 0x09	; 9
 8a0:	81 30       	cpi	r24, 0x01	; 1
 8a2:	31 f0       	breq	.+12     	; 0x8b0 <dtoa_prf+0x4a>
 8a4:	e1 fc       	sbrc	r14, 1
 8a6:	06 c0       	rjmp	.+12     	; 0x8b4 <dtoa_prf+0x4e>
 8a8:	e0 fe       	sbrs	r14, 0
 8aa:	06 c0       	rjmp	.+12     	; 0x8b8 <dtoa_prf+0x52>
 8ac:	90 e2       	ldi	r25, 0x20	; 32
 8ae:	05 c0       	rjmp	.+10     	; 0x8ba <dtoa_prf+0x54>
 8b0:	9d e2       	ldi	r25, 0x2D	; 45
 8b2:	03 c0       	rjmp	.+6      	; 0x8ba <dtoa_prf+0x54>
 8b4:	9b e2       	ldi	r25, 0x2B	; 43
 8b6:	01 c0       	rjmp	.+2      	; 0x8ba <dtoa_prf+0x54>
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	5e 2d       	mov	r21, r14
 8bc:	50 71       	andi	r21, 0x10	; 16
 8be:	43 ff       	sbrs	r20, 3
 8c0:	3c c0       	rjmp	.+120    	; 0x93a <__stack+0x3b>
 8c2:	91 11       	cpse	r25, r1
 8c4:	02 c0       	rjmp	.+4      	; 0x8ca <dtoa_prf+0x64>
 8c6:	83 e0       	ldi	r24, 0x03	; 3
 8c8:	01 c0       	rjmp	.+2      	; 0x8cc <dtoa_prf+0x66>
 8ca:	84 e0       	ldi	r24, 0x04	; 4
 8cc:	81 17       	cp	r24, r17
 8ce:	18 f4       	brcc	.+6      	; 0x8d6 <dtoa_prf+0x70>
 8d0:	21 2f       	mov	r18, r17
 8d2:	28 1b       	sub	r18, r24
 8d4:	01 c0       	rjmp	.+2      	; 0x8d8 <dtoa_prf+0x72>
 8d6:	20 e0       	ldi	r18, 0x00	; 0
 8d8:	51 11       	cpse	r21, r1
 8da:	0b c0       	rjmp	.+22     	; 0x8f2 <dtoa_prf+0x8c>
 8dc:	f6 01       	movw	r30, r12
 8de:	82 2f       	mov	r24, r18
 8e0:	30 e2       	ldi	r19, 0x20	; 32
 8e2:	88 23       	and	r24, r24
 8e4:	19 f0       	breq	.+6      	; 0x8ec <dtoa_prf+0x86>
 8e6:	31 93       	st	Z+, r19
 8e8:	81 50       	subi	r24, 0x01	; 1
 8ea:	fb cf       	rjmp	.-10     	; 0x8e2 <dtoa_prf+0x7c>
 8ec:	c2 0e       	add	r12, r18
 8ee:	d1 1c       	adc	r13, r1
 8f0:	20 e0       	ldi	r18, 0x00	; 0
 8f2:	99 23       	and	r25, r25
 8f4:	29 f0       	breq	.+10     	; 0x900 <__stack+0x1>
 8f6:	d6 01       	movw	r26, r12
 8f8:	9c 93       	st	X, r25
 8fa:	f6 01       	movw	r30, r12
 8fc:	31 96       	adiw	r30, 0x01	; 1
 8fe:	6f 01       	movw	r12, r30
 900:	c6 01       	movw	r24, r12
 902:	03 96       	adiw	r24, 0x03	; 3
 904:	e2 fe       	sbrs	r14, 2
 906:	0a c0       	rjmp	.+20     	; 0x91c <__stack+0x1d>
 908:	3e e4       	ldi	r19, 0x4E	; 78
 90a:	d6 01       	movw	r26, r12
 90c:	3c 93       	st	X, r19
 90e:	41 e4       	ldi	r20, 0x41	; 65
 910:	11 96       	adiw	r26, 0x01	; 1
 912:	4c 93       	st	X, r20
 914:	11 97       	sbiw	r26, 0x01	; 1
 916:	12 96       	adiw	r26, 0x02	; 2
 918:	3c 93       	st	X, r19
 91a:	06 c0       	rjmp	.+12     	; 0x928 <__stack+0x29>
 91c:	3e e6       	ldi	r19, 0x6E	; 110
 91e:	f6 01       	movw	r30, r12
 920:	30 83       	st	Z, r19
 922:	41 e6       	ldi	r20, 0x61	; 97
 924:	41 83       	std	Z+1, r20	; 0x01
 926:	32 83       	std	Z+2, r19	; 0x02
 928:	fc 01       	movw	r30, r24
 92a:	32 2f       	mov	r19, r18
 92c:	40 e2       	ldi	r20, 0x20	; 32
 92e:	33 23       	and	r19, r19
 930:	09 f4       	brne	.+2      	; 0x934 <__stack+0x35>
 932:	42 c0       	rjmp	.+132    	; 0x9b8 <__stack+0xb9>
 934:	41 93       	st	Z+, r20
 936:	31 50       	subi	r19, 0x01	; 1
 938:	fa cf       	rjmp	.-12     	; 0x92e <__stack+0x2f>
 93a:	42 ff       	sbrs	r20, 2
 93c:	44 c0       	rjmp	.+136    	; 0x9c6 <__stack+0xc7>
 93e:	91 11       	cpse	r25, r1
 940:	02 c0       	rjmp	.+4      	; 0x946 <__stack+0x47>
 942:	83 e0       	ldi	r24, 0x03	; 3
 944:	01 c0       	rjmp	.+2      	; 0x948 <__stack+0x49>
 946:	84 e0       	ldi	r24, 0x04	; 4
 948:	81 17       	cp	r24, r17
 94a:	18 f4       	brcc	.+6      	; 0x952 <__stack+0x53>
 94c:	21 2f       	mov	r18, r17
 94e:	28 1b       	sub	r18, r24
 950:	01 c0       	rjmp	.+2      	; 0x954 <__stack+0x55>
 952:	20 e0       	ldi	r18, 0x00	; 0
 954:	51 11       	cpse	r21, r1
 956:	0b c0       	rjmp	.+22     	; 0x96e <__stack+0x6f>
 958:	f6 01       	movw	r30, r12
 95a:	82 2f       	mov	r24, r18
 95c:	30 e2       	ldi	r19, 0x20	; 32
 95e:	88 23       	and	r24, r24
 960:	19 f0       	breq	.+6      	; 0x968 <__stack+0x69>
 962:	31 93       	st	Z+, r19
 964:	81 50       	subi	r24, 0x01	; 1
 966:	fb cf       	rjmp	.-10     	; 0x95e <__stack+0x5f>
 968:	c2 0e       	add	r12, r18
 96a:	d1 1c       	adc	r13, r1
 96c:	20 e0       	ldi	r18, 0x00	; 0
 96e:	99 23       	and	r25, r25
 970:	29 f0       	breq	.+10     	; 0x97c <__stack+0x7d>
 972:	d6 01       	movw	r26, r12
 974:	9c 93       	st	X, r25
 976:	f6 01       	movw	r30, r12
 978:	31 96       	adiw	r30, 0x01	; 1
 97a:	6f 01       	movw	r12, r30
 97c:	c6 01       	movw	r24, r12
 97e:	03 96       	adiw	r24, 0x03	; 3
 980:	e2 fe       	sbrs	r14, 2
 982:	0b c0       	rjmp	.+22     	; 0x99a <__stack+0x9b>
 984:	39 e4       	ldi	r19, 0x49	; 73
 986:	d6 01       	movw	r26, r12
 988:	3c 93       	st	X, r19
 98a:	3e e4       	ldi	r19, 0x4E	; 78
 98c:	11 96       	adiw	r26, 0x01	; 1
 98e:	3c 93       	st	X, r19
 990:	11 97       	sbiw	r26, 0x01	; 1
 992:	36 e4       	ldi	r19, 0x46	; 70
 994:	12 96       	adiw	r26, 0x02	; 2
 996:	3c 93       	st	X, r19
 998:	07 c0       	rjmp	.+14     	; 0x9a8 <__stack+0xa9>
 99a:	39 e6       	ldi	r19, 0x69	; 105
 99c:	f6 01       	movw	r30, r12
 99e:	30 83       	st	Z, r19
 9a0:	3e e6       	ldi	r19, 0x6E	; 110
 9a2:	31 83       	std	Z+1, r19	; 0x01
 9a4:	36 e6       	ldi	r19, 0x66	; 102
 9a6:	32 83       	std	Z+2, r19	; 0x02
 9a8:	fc 01       	movw	r30, r24
 9aa:	32 2f       	mov	r19, r18
 9ac:	40 e2       	ldi	r20, 0x20	; 32
 9ae:	33 23       	and	r19, r19
 9b0:	19 f0       	breq	.+6      	; 0x9b8 <__stack+0xb9>
 9b2:	41 93       	st	Z+, r20
 9b4:	31 50       	subi	r19, 0x01	; 1
 9b6:	fb cf       	rjmp	.-10     	; 0x9ae <__stack+0xaf>
 9b8:	fc 01       	movw	r30, r24
 9ba:	e2 0f       	add	r30, r18
 9bc:	f1 1d       	adc	r31, r1
 9be:	10 82       	st	Z, r1
 9c0:	8e ef       	ldi	r24, 0xFE	; 254
 9c2:	9f ef       	ldi	r25, 0xFF	; 255
 9c4:	a6 c0       	rjmp	.+332    	; 0xb12 <__stack+0x213>
 9c6:	21 e0       	ldi	r18, 0x01	; 1
 9c8:	30 e0       	ldi	r19, 0x00	; 0
 9ca:	91 11       	cpse	r25, r1
 9cc:	02 c0       	rjmp	.+4      	; 0x9d2 <__stack+0xd3>
 9ce:	20 e0       	ldi	r18, 0x00	; 0
 9d0:	30 e0       	ldi	r19, 0x00	; 0
 9d2:	16 16       	cp	r1, r22
 9d4:	17 06       	cpc	r1, r23
 9d6:	1c f4       	brge	.+6      	; 0x9de <__stack+0xdf>
 9d8:	fb 01       	movw	r30, r22
 9da:	31 96       	adiw	r30, 0x01	; 1
 9dc:	02 c0       	rjmp	.+4      	; 0x9e2 <__stack+0xe3>
 9de:	e1 e0       	ldi	r30, 0x01	; 1
 9e0:	f0 e0       	ldi	r31, 0x00	; 0
 9e2:	2e 0f       	add	r18, r30
 9e4:	3f 1f       	adc	r19, r31
 9e6:	bb 20       	and	r11, r11
 9e8:	21 f0       	breq	.+8      	; 0x9f2 <__stack+0xf3>
 9ea:	eb 2d       	mov	r30, r11
 9ec:	f0 e0       	ldi	r31, 0x00	; 0
 9ee:	31 96       	adiw	r30, 0x01	; 1
 9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <__stack+0xf7>
 9f2:	e0 e0       	ldi	r30, 0x00	; 0
 9f4:	f0 e0       	ldi	r31, 0x00	; 0
 9f6:	2e 0f       	add	r18, r30
 9f8:	3f 1f       	adc	r19, r31
 9fa:	e1 2f       	mov	r30, r17
 9fc:	f0 e0       	ldi	r31, 0x00	; 0
 9fe:	2e 17       	cp	r18, r30
 a00:	3f 07       	cpc	r19, r31
 a02:	1c f4       	brge	.+6      	; 0xa0a <__stack+0x10b>
 a04:	12 1b       	sub	r17, r18
 a06:	21 2f       	mov	r18, r17
 a08:	01 c0       	rjmp	.+2      	; 0xa0c <__stack+0x10d>
 a0a:	20 e0       	ldi	r18, 0x00	; 0
 a0c:	8e 2d       	mov	r24, r14
 a0e:	88 71       	andi	r24, 0x18	; 24
 a10:	59 f4       	brne	.+22     	; 0xa28 <__stack+0x129>
 a12:	f6 01       	movw	r30, r12
 a14:	82 2f       	mov	r24, r18
 a16:	30 e2       	ldi	r19, 0x20	; 32
 a18:	88 23       	and	r24, r24
 a1a:	19 f0       	breq	.+6      	; 0xa22 <__stack+0x123>
 a1c:	31 93       	st	Z+, r19
 a1e:	81 50       	subi	r24, 0x01	; 1
 a20:	fb cf       	rjmp	.-10     	; 0xa18 <__stack+0x119>
 a22:	c2 0e       	add	r12, r18
 a24:	d1 1c       	adc	r13, r1
 a26:	20 e0       	ldi	r18, 0x00	; 0
 a28:	99 23       	and	r25, r25
 a2a:	29 f0       	breq	.+10     	; 0xa36 <__stack+0x137>
 a2c:	d6 01       	movw	r26, r12
 a2e:	9c 93       	st	X, r25
 a30:	f6 01       	movw	r30, r12
 a32:	31 96       	adiw	r30, 0x01	; 1
 a34:	6f 01       	movw	r12, r30
 a36:	51 11       	cpse	r21, r1
 a38:	0b c0       	rjmp	.+22     	; 0xa50 <__stack+0x151>
 a3a:	f6 01       	movw	r30, r12
 a3c:	82 2f       	mov	r24, r18
 a3e:	90 e3       	ldi	r25, 0x30	; 48
 a40:	88 23       	and	r24, r24
 a42:	19 f0       	breq	.+6      	; 0xa4a <__stack+0x14b>
 a44:	91 93       	st	Z+, r25
 a46:	81 50       	subi	r24, 0x01	; 1
 a48:	fb cf       	rjmp	.-10     	; 0xa40 <__stack+0x141>
 a4a:	c2 0e       	add	r12, r18
 a4c:	d1 1c       	adc	r13, r1
 a4e:	20 e0       	ldi	r18, 0x00	; 0
 a50:	0f 2d       	mov	r16, r15
 a52:	06 0f       	add	r16, r22
 a54:	9a 81       	ldd	r25, Y+2	; 0x02
 a56:	34 2f       	mov	r19, r20
 a58:	30 71       	andi	r19, 0x10	; 16
 a5a:	44 ff       	sbrs	r20, 4
 a5c:	03 c0       	rjmp	.+6      	; 0xa64 <__stack+0x165>
 a5e:	91 33       	cpi	r25, 0x31	; 49
 a60:	09 f4       	brne	.+2      	; 0xa64 <__stack+0x165>
 a62:	01 50       	subi	r16, 0x01	; 1
 a64:	10 16       	cp	r1, r16
 a66:	24 f4       	brge	.+8      	; 0xa70 <__stack+0x171>
 a68:	09 30       	cpi	r16, 0x09	; 9
 a6a:	18 f0       	brcs	.+6      	; 0xa72 <__stack+0x173>
 a6c:	08 e0       	ldi	r16, 0x08	; 8
 a6e:	01 c0       	rjmp	.+2      	; 0xa72 <__stack+0x173>
 a70:	01 e0       	ldi	r16, 0x01	; 1
 a72:	ab 01       	movw	r20, r22
 a74:	77 ff       	sbrs	r23, 7
 a76:	02 c0       	rjmp	.+4      	; 0xa7c <__stack+0x17d>
 a78:	40 e0       	ldi	r20, 0x00	; 0
 a7a:	50 e0       	ldi	r21, 0x00	; 0
 a7c:	fb 01       	movw	r30, r22
 a7e:	e4 1b       	sub	r30, r20
 a80:	f5 0b       	sbc	r31, r21
 a82:	a1 e0       	ldi	r26, 0x01	; 1
 a84:	b0 e0       	ldi	r27, 0x00	; 0
 a86:	ac 0f       	add	r26, r28
 a88:	bd 1f       	adc	r27, r29
 a8a:	ea 0f       	add	r30, r26
 a8c:	fb 1f       	adc	r31, r27
 a8e:	8e e2       	ldi	r24, 0x2E	; 46
 a90:	a8 2e       	mov	r10, r24
 a92:	4b 01       	movw	r8, r22
 a94:	80 1a       	sub	r8, r16
 a96:	91 08       	sbc	r9, r1
 a98:	0b 2d       	mov	r16, r11
 a9a:	10 e0       	ldi	r17, 0x00	; 0
 a9c:	11 95       	neg	r17
 a9e:	01 95       	neg	r16
 aa0:	11 09       	sbc	r17, r1
 aa2:	4f 3f       	cpi	r20, 0xFF	; 255
 aa4:	bf ef       	ldi	r27, 0xFF	; 255
 aa6:	5b 07       	cpc	r21, r27
 aa8:	21 f4       	brne	.+8      	; 0xab2 <__stack+0x1b3>
 aaa:	d6 01       	movw	r26, r12
 aac:	ac 92       	st	X, r10
 aae:	11 96       	adiw	r26, 0x01	; 1
 ab0:	6d 01       	movw	r12, r26
 ab2:	64 17       	cp	r22, r20
 ab4:	75 07       	cpc	r23, r21
 ab6:	2c f0       	brlt	.+10     	; 0xac2 <__stack+0x1c3>
 ab8:	84 16       	cp	r8, r20
 aba:	95 06       	cpc	r9, r21
 abc:	14 f4       	brge	.+4      	; 0xac2 <__stack+0x1c3>
 abe:	81 81       	ldd	r24, Z+1	; 0x01
 ac0:	01 c0       	rjmp	.+2      	; 0xac4 <__stack+0x1c5>
 ac2:	80 e3       	ldi	r24, 0x30	; 48
 ac4:	41 50       	subi	r20, 0x01	; 1
 ac6:	51 09       	sbc	r21, r1
 ac8:	31 96       	adiw	r30, 0x01	; 1
 aca:	d6 01       	movw	r26, r12
 acc:	11 96       	adiw	r26, 0x01	; 1
 ace:	7d 01       	movw	r14, r26
 ad0:	40 17       	cp	r20, r16
 ad2:	51 07       	cpc	r21, r17
 ad4:	24 f0       	brlt	.+8      	; 0xade <__stack+0x1df>
 ad6:	d6 01       	movw	r26, r12
 ad8:	8c 93       	st	X, r24
 ada:	67 01       	movw	r12, r14
 adc:	e2 cf       	rjmp	.-60     	; 0xaa2 <__stack+0x1a3>
 ade:	64 17       	cp	r22, r20
 ae0:	75 07       	cpc	r23, r21
 ae2:	39 f4       	brne	.+14     	; 0xaf2 <__stack+0x1f3>
 ae4:	96 33       	cpi	r25, 0x36	; 54
 ae6:	20 f4       	brcc	.+8      	; 0xaf0 <__stack+0x1f1>
 ae8:	95 33       	cpi	r25, 0x35	; 53
 aea:	19 f4       	brne	.+6      	; 0xaf2 <__stack+0x1f3>
 aec:	31 11       	cpse	r19, r1
 aee:	01 c0       	rjmp	.+2      	; 0xaf2 <__stack+0x1f3>
 af0:	81 e3       	ldi	r24, 0x31	; 49
 af2:	f6 01       	movw	r30, r12
 af4:	80 83       	st	Z, r24
 af6:	f7 01       	movw	r30, r14
 af8:	82 2f       	mov	r24, r18
 afa:	90 e2       	ldi	r25, 0x20	; 32
 afc:	88 23       	and	r24, r24
 afe:	19 f0       	breq	.+6      	; 0xb06 <__stack+0x207>
 b00:	91 93       	st	Z+, r25
 b02:	81 50       	subi	r24, 0x01	; 1
 b04:	fb cf       	rjmp	.-10     	; 0xafc <__stack+0x1fd>
 b06:	f7 01       	movw	r30, r14
 b08:	e2 0f       	add	r30, r18
 b0a:	f1 1d       	adc	r31, r1
 b0c:	10 82       	st	Z, r1
 b0e:	80 e0       	ldi	r24, 0x00	; 0
 b10:	90 e0       	ldi	r25, 0x00	; 0
 b12:	29 96       	adiw	r28, 0x09	; 9
 b14:	ec e0       	ldi	r30, 0x0C	; 12
 b16:	0c 94 b8 06 	jmp	0xd70	; 0xd70 <__epilogue_restores__+0xc>

00000b1a <__ftoa_engine>:
 b1a:	28 30       	cpi	r18, 0x08	; 8
 b1c:	08 f0       	brcs	.+2      	; 0xb20 <__ftoa_engine+0x6>
 b1e:	27 e0       	ldi	r18, 0x07	; 7
 b20:	33 27       	eor	r19, r19
 b22:	da 01       	movw	r26, r20
 b24:	99 0f       	add	r25, r25
 b26:	31 1d       	adc	r19, r1
 b28:	87 fd       	sbrc	r24, 7
 b2a:	91 60       	ori	r25, 0x01	; 1
 b2c:	00 96       	adiw	r24, 0x00	; 0
 b2e:	61 05       	cpc	r22, r1
 b30:	71 05       	cpc	r23, r1
 b32:	39 f4       	brne	.+14     	; 0xb42 <__ftoa_engine+0x28>
 b34:	32 60       	ori	r19, 0x02	; 2
 b36:	2e 5f       	subi	r18, 0xFE	; 254
 b38:	3d 93       	st	X+, r19
 b3a:	30 e3       	ldi	r19, 0x30	; 48
 b3c:	2a 95       	dec	r18
 b3e:	e1 f7       	brne	.-8      	; 0xb38 <__ftoa_engine+0x1e>
 b40:	08 95       	ret
 b42:	9f 3f       	cpi	r25, 0xFF	; 255
 b44:	30 f0       	brcs	.+12     	; 0xb52 <__ftoa_engine+0x38>
 b46:	80 38       	cpi	r24, 0x80	; 128
 b48:	71 05       	cpc	r23, r1
 b4a:	61 05       	cpc	r22, r1
 b4c:	09 f0       	breq	.+2      	; 0xb50 <__ftoa_engine+0x36>
 b4e:	3c 5f       	subi	r19, 0xFC	; 252
 b50:	3c 5f       	subi	r19, 0xFC	; 252
 b52:	3d 93       	st	X+, r19
 b54:	91 30       	cpi	r25, 0x01	; 1
 b56:	08 f0       	brcs	.+2      	; 0xb5a <__ftoa_engine+0x40>
 b58:	80 68       	ori	r24, 0x80	; 128
 b5a:	91 1d       	adc	r25, r1
 b5c:	df 93       	push	r29
 b5e:	cf 93       	push	r28
 b60:	1f 93       	push	r17
 b62:	0f 93       	push	r16
 b64:	ff 92       	push	r15
 b66:	ef 92       	push	r14
 b68:	19 2f       	mov	r17, r25
 b6a:	98 7f       	andi	r25, 0xF8	; 248
 b6c:	96 95       	lsr	r25
 b6e:	e9 2f       	mov	r30, r25
 b70:	96 95       	lsr	r25
 b72:	96 95       	lsr	r25
 b74:	e9 0f       	add	r30, r25
 b76:	ff 27       	eor	r31, r31
 b78:	ee 53       	subi	r30, 0x3E	; 62
 b7a:	ff 4f       	sbci	r31, 0xFF	; 255
 b7c:	99 27       	eor	r25, r25
 b7e:	33 27       	eor	r19, r19
 b80:	ee 24       	eor	r14, r14
 b82:	ff 24       	eor	r15, r15
 b84:	a7 01       	movw	r20, r14
 b86:	e7 01       	movw	r28, r14
 b88:	05 90       	lpm	r0, Z+
 b8a:	08 94       	sec
 b8c:	07 94       	ror	r0
 b8e:	28 f4       	brcc	.+10     	; 0xb9a <__ftoa_engine+0x80>
 b90:	36 0f       	add	r19, r22
 b92:	e7 1e       	adc	r14, r23
 b94:	f8 1e       	adc	r15, r24
 b96:	49 1f       	adc	r20, r25
 b98:	51 1d       	adc	r21, r1
 b9a:	66 0f       	add	r22, r22
 b9c:	77 1f       	adc	r23, r23
 b9e:	88 1f       	adc	r24, r24
 ba0:	99 1f       	adc	r25, r25
 ba2:	06 94       	lsr	r0
 ba4:	a1 f7       	brne	.-24     	; 0xb8e <__ftoa_engine+0x74>
 ba6:	05 90       	lpm	r0, Z+
 ba8:	07 94       	ror	r0
 baa:	28 f4       	brcc	.+10     	; 0xbb6 <__ftoa_engine+0x9c>
 bac:	e7 0e       	add	r14, r23
 bae:	f8 1e       	adc	r15, r24
 bb0:	49 1f       	adc	r20, r25
 bb2:	56 1f       	adc	r21, r22
 bb4:	c1 1d       	adc	r28, r1
 bb6:	77 0f       	add	r23, r23
 bb8:	88 1f       	adc	r24, r24
 bba:	99 1f       	adc	r25, r25
 bbc:	66 1f       	adc	r22, r22
 bbe:	06 94       	lsr	r0
 bc0:	a1 f7       	brne	.-24     	; 0xbaa <__ftoa_engine+0x90>
 bc2:	05 90       	lpm	r0, Z+
 bc4:	07 94       	ror	r0
 bc6:	28 f4       	brcc	.+10     	; 0xbd2 <__ftoa_engine+0xb8>
 bc8:	f8 0e       	add	r15, r24
 bca:	49 1f       	adc	r20, r25
 bcc:	56 1f       	adc	r21, r22
 bce:	c7 1f       	adc	r28, r23
 bd0:	d1 1d       	adc	r29, r1
 bd2:	88 0f       	add	r24, r24
 bd4:	99 1f       	adc	r25, r25
 bd6:	66 1f       	adc	r22, r22
 bd8:	77 1f       	adc	r23, r23
 bda:	06 94       	lsr	r0
 bdc:	a1 f7       	brne	.-24     	; 0xbc6 <__ftoa_engine+0xac>
 bde:	05 90       	lpm	r0, Z+
 be0:	07 94       	ror	r0
 be2:	20 f4       	brcc	.+8      	; 0xbec <__ftoa_engine+0xd2>
 be4:	49 0f       	add	r20, r25
 be6:	56 1f       	adc	r21, r22
 be8:	c7 1f       	adc	r28, r23
 bea:	d8 1f       	adc	r29, r24
 bec:	99 0f       	add	r25, r25
 bee:	66 1f       	adc	r22, r22
 bf0:	77 1f       	adc	r23, r23
 bf2:	88 1f       	adc	r24, r24
 bf4:	06 94       	lsr	r0
 bf6:	a9 f7       	brne	.-22     	; 0xbe2 <__ftoa_engine+0xc8>
 bf8:	84 91       	lpm	r24, Z
 bfa:	10 95       	com	r17
 bfc:	17 70       	andi	r17, 0x07	; 7
 bfe:	41 f0       	breq	.+16     	; 0xc10 <__ftoa_engine+0xf6>
 c00:	d6 95       	lsr	r29
 c02:	c7 95       	ror	r28
 c04:	57 95       	ror	r21
 c06:	47 95       	ror	r20
 c08:	f7 94       	ror	r15
 c0a:	e7 94       	ror	r14
 c0c:	1a 95       	dec	r17
 c0e:	c1 f7       	brne	.-16     	; 0xc00 <__ftoa_engine+0xe6>
 c10:	e8 e6       	ldi	r30, 0x68	; 104
 c12:	f0 e0       	ldi	r31, 0x00	; 0
 c14:	68 94       	set
 c16:	15 90       	lpm	r1, Z+
 c18:	15 91       	lpm	r17, Z+
 c1a:	35 91       	lpm	r19, Z+
 c1c:	65 91       	lpm	r22, Z+
 c1e:	95 91       	lpm	r25, Z+
 c20:	05 90       	lpm	r0, Z+
 c22:	7f e2       	ldi	r23, 0x2F	; 47
 c24:	73 95       	inc	r23
 c26:	e1 18       	sub	r14, r1
 c28:	f1 0a       	sbc	r15, r17
 c2a:	43 0b       	sbc	r20, r19
 c2c:	56 0b       	sbc	r21, r22
 c2e:	c9 0b       	sbc	r28, r25
 c30:	d0 09       	sbc	r29, r0
 c32:	c0 f7       	brcc	.-16     	; 0xc24 <__ftoa_engine+0x10a>
 c34:	e1 0c       	add	r14, r1
 c36:	f1 1e       	adc	r15, r17
 c38:	43 1f       	adc	r20, r19
 c3a:	56 1f       	adc	r21, r22
 c3c:	c9 1f       	adc	r28, r25
 c3e:	d0 1d       	adc	r29, r0
 c40:	7e f4       	brtc	.+30     	; 0xc60 <__ftoa_engine+0x146>
 c42:	70 33       	cpi	r23, 0x30	; 48
 c44:	11 f4       	brne	.+4      	; 0xc4a <__ftoa_engine+0x130>
 c46:	8a 95       	dec	r24
 c48:	e6 cf       	rjmp	.-52     	; 0xc16 <__ftoa_engine+0xfc>
 c4a:	e8 94       	clt
 c4c:	01 50       	subi	r16, 0x01	; 1
 c4e:	30 f0       	brcs	.+12     	; 0xc5c <__ftoa_engine+0x142>
 c50:	08 0f       	add	r16, r24
 c52:	0a f4       	brpl	.+2      	; 0xc56 <__ftoa_engine+0x13c>
 c54:	00 27       	eor	r16, r16
 c56:	02 17       	cp	r16, r18
 c58:	08 f4       	brcc	.+2      	; 0xc5c <__ftoa_engine+0x142>
 c5a:	20 2f       	mov	r18, r16
 c5c:	23 95       	inc	r18
 c5e:	02 2f       	mov	r16, r18
 c60:	7a 33       	cpi	r23, 0x3A	; 58
 c62:	28 f0       	brcs	.+10     	; 0xc6e <__ftoa_engine+0x154>
 c64:	79 e3       	ldi	r23, 0x39	; 57
 c66:	7d 93       	st	X+, r23
 c68:	2a 95       	dec	r18
 c6a:	e9 f7       	brne	.-6      	; 0xc66 <__ftoa_engine+0x14c>
 c6c:	10 c0       	rjmp	.+32     	; 0xc8e <__ftoa_engine+0x174>
 c6e:	7d 93       	st	X+, r23
 c70:	2a 95       	dec	r18
 c72:	89 f6       	brne	.-94     	; 0xc16 <__ftoa_engine+0xfc>
 c74:	06 94       	lsr	r0
 c76:	97 95       	ror	r25
 c78:	67 95       	ror	r22
 c7a:	37 95       	ror	r19
 c7c:	17 95       	ror	r17
 c7e:	17 94       	ror	r1
 c80:	e1 18       	sub	r14, r1
 c82:	f1 0a       	sbc	r15, r17
 c84:	43 0b       	sbc	r20, r19
 c86:	56 0b       	sbc	r21, r22
 c88:	c9 0b       	sbc	r28, r25
 c8a:	d0 09       	sbc	r29, r0
 c8c:	98 f0       	brcs	.+38     	; 0xcb4 <__ftoa_engine+0x19a>
 c8e:	23 95       	inc	r18
 c90:	7e 91       	ld	r23, -X
 c92:	73 95       	inc	r23
 c94:	7a 33       	cpi	r23, 0x3A	; 58
 c96:	08 f0       	brcs	.+2      	; 0xc9a <__ftoa_engine+0x180>
 c98:	70 e3       	ldi	r23, 0x30	; 48
 c9a:	7c 93       	st	X, r23
 c9c:	20 13       	cpse	r18, r16
 c9e:	b8 f7       	brcc	.-18     	; 0xc8e <__ftoa_engine+0x174>
 ca0:	7e 91       	ld	r23, -X
 ca2:	70 61       	ori	r23, 0x10	; 16
 ca4:	7d 93       	st	X+, r23
 ca6:	30 f0       	brcs	.+12     	; 0xcb4 <__ftoa_engine+0x19a>
 ca8:	83 95       	inc	r24
 caa:	71 e3       	ldi	r23, 0x31	; 49
 cac:	7d 93       	st	X+, r23
 cae:	70 e3       	ldi	r23, 0x30	; 48
 cb0:	2a 95       	dec	r18
 cb2:	e1 f7       	brne	.-8      	; 0xcac <__ftoa_engine+0x192>
 cb4:	11 24       	eor	r1, r1
 cb6:	ef 90       	pop	r14
 cb8:	ff 90       	pop	r15
 cba:	0f 91       	pop	r16
 cbc:	1f 91       	pop	r17
 cbe:	cf 91       	pop	r28
 cc0:	df 91       	pop	r29
 cc2:	99 27       	eor	r25, r25
 cc4:	87 fd       	sbrc	r24, 7
 cc6:	90 95       	com	r25
 cc8:	08 95       	ret

00000cca <eeprom_read_dword>:
 cca:	a6 e1       	ldi	r26, 0x16	; 22
 ccc:	b0 e0       	ldi	r27, 0x00	; 0
 cce:	44 e0       	ldi	r20, 0x04	; 4
 cd0:	50 e0       	ldi	r21, 0x00	; 0
 cd2:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <eeprom_read_blraw>

00000cd6 <eeprom_write_dword>:
 cd6:	24 2f       	mov	r18, r20
 cd8:	0e 94 89 06 	call	0xd12	; 0xd12 <eeprom_write_r18>
 cdc:	25 2f       	mov	r18, r21
 cde:	0e 94 89 06 	call	0xd12	; 0xd12 <eeprom_write_r18>
 ce2:	0c 94 73 06 	jmp	0xce6	; 0xce6 <eeprom_write_word>

00000ce6 <eeprom_write_word>:
 ce6:	0e 94 88 06 	call	0xd10	; 0xd10 <eeprom_write_byte>
 cea:	27 2f       	mov	r18, r23
 cec:	0c 94 89 06 	jmp	0xd12	; 0xd12 <eeprom_write_r18>

00000cf0 <eeprom_read_block>:
 cf0:	dc 01       	movw	r26, r24
 cf2:	cb 01       	movw	r24, r22

00000cf4 <eeprom_read_blraw>:
 cf4:	fc 01       	movw	r30, r24
 cf6:	f9 99       	sbic	0x1f, 1	; 31
 cf8:	fe cf       	rjmp	.-4      	; 0xcf6 <eeprom_read_blraw+0x2>
 cfa:	06 c0       	rjmp	.+12     	; 0xd08 <eeprom_read_blraw+0x14>
 cfc:	f2 bd       	out	0x22, r31	; 34
 cfe:	e1 bd       	out	0x21, r30	; 33
 d00:	f8 9a       	sbi	0x1f, 0	; 31
 d02:	31 96       	adiw	r30, 0x01	; 1
 d04:	00 b4       	in	r0, 0x20	; 32
 d06:	0d 92       	st	X+, r0
 d08:	41 50       	subi	r20, 0x01	; 1
 d0a:	50 40       	sbci	r21, 0x00	; 0
 d0c:	b8 f7       	brcc	.-18     	; 0xcfc <eeprom_read_blraw+0x8>
 d0e:	08 95       	ret

00000d10 <eeprom_write_byte>:
 d10:	26 2f       	mov	r18, r22

00000d12 <eeprom_write_r18>:
 d12:	f9 99       	sbic	0x1f, 1	; 31
 d14:	fe cf       	rjmp	.-4      	; 0xd12 <eeprom_write_r18>
 d16:	1f ba       	out	0x1f, r1	; 31
 d18:	92 bd       	out	0x22, r25	; 34
 d1a:	81 bd       	out	0x21, r24	; 33
 d1c:	20 bd       	out	0x20, r18	; 32
 d1e:	0f b6       	in	r0, 0x3f	; 63
 d20:	f8 94       	cli
 d22:	fa 9a       	sbi	0x1f, 2	; 31
 d24:	f9 9a       	sbi	0x1f, 1	; 31
 d26:	0f be       	out	0x3f, r0	; 63
 d28:	01 96       	adiw	r24, 0x01	; 1
 d2a:	08 95       	ret

00000d2c <__prologue_saves__>:
 d2c:	2f 92       	push	r2
 d2e:	3f 92       	push	r3
 d30:	4f 92       	push	r4
 d32:	5f 92       	push	r5
 d34:	6f 92       	push	r6
 d36:	7f 92       	push	r7
 d38:	8f 92       	push	r8
 d3a:	9f 92       	push	r9
 d3c:	af 92       	push	r10
 d3e:	bf 92       	push	r11
 d40:	cf 92       	push	r12
 d42:	df 92       	push	r13
 d44:	ef 92       	push	r14
 d46:	ff 92       	push	r15
 d48:	0f 93       	push	r16
 d4a:	1f 93       	push	r17
 d4c:	cf 93       	push	r28
 d4e:	df 93       	push	r29
 d50:	cd b7       	in	r28, 0x3d	; 61
 d52:	de b7       	in	r29, 0x3e	; 62
 d54:	ca 1b       	sub	r28, r26
 d56:	db 0b       	sbc	r29, r27
 d58:	0f b6       	in	r0, 0x3f	; 63
 d5a:	f8 94       	cli
 d5c:	de bf       	out	0x3e, r29	; 62
 d5e:	0f be       	out	0x3f, r0	; 63
 d60:	cd bf       	out	0x3d, r28	; 61
 d62:	09 94       	ijmp

00000d64 <__epilogue_restores__>:
 d64:	2a 88       	ldd	r2, Y+18	; 0x12
 d66:	39 88       	ldd	r3, Y+17	; 0x11
 d68:	48 88       	ldd	r4, Y+16	; 0x10
 d6a:	5f 84       	ldd	r5, Y+15	; 0x0f
 d6c:	6e 84       	ldd	r6, Y+14	; 0x0e
 d6e:	7d 84       	ldd	r7, Y+13	; 0x0d
 d70:	8c 84       	ldd	r8, Y+12	; 0x0c
 d72:	9b 84       	ldd	r9, Y+11	; 0x0b
 d74:	aa 84       	ldd	r10, Y+10	; 0x0a
 d76:	b9 84       	ldd	r11, Y+9	; 0x09
 d78:	c8 84       	ldd	r12, Y+8	; 0x08
 d7a:	df 80       	ldd	r13, Y+7	; 0x07
 d7c:	ee 80       	ldd	r14, Y+6	; 0x06
 d7e:	fd 80       	ldd	r15, Y+5	; 0x05
 d80:	0c 81       	ldd	r16, Y+4	; 0x04
 d82:	1b 81       	ldd	r17, Y+3	; 0x03
 d84:	aa 81       	ldd	r26, Y+2	; 0x02
 d86:	b9 81       	ldd	r27, Y+1	; 0x01
 d88:	ce 0f       	add	r28, r30
 d8a:	d1 1d       	adc	r29, r1
 d8c:	0f b6       	in	r0, 0x3f	; 63
 d8e:	f8 94       	cli
 d90:	de bf       	out	0x3e, r29	; 62
 d92:	0f be       	out	0x3f, r0	; 63
 d94:	cd bf       	out	0x3d, r28	; 61
 d96:	ed 01       	movw	r28, r26
 d98:	08 95       	ret

00000d9a <_exit>:
 d9a:	f8 94       	cli

00000d9c <__stop_program>:
 d9c:	ff cf       	rjmp	.-2      	; 0xd9c <__stop_program>
